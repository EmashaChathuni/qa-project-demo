name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  backend-build:
    name: Backend: Build & Test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '17'
          cache: maven

      - name: Cache .m2
        uses: actions/cache@v4
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-m2-

      - name: Build backend and run tests
        working-directory: qa/backend
        run: |
          chmod +x ./mvnw.cmd || true
          ./mvnw.cmd -B -DskipTests=false test

  frontend-build:
    name: Frontend: Install & Build
    runs-on: ubuntu-latest
    needs: backend-build
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install and build frontend
        working-directory: qa/frontend
        run: |
          npm ci
          npm run build --if-present

  sonarcloud-scan:
    name: SonarCloud (optional)
    runs-on: ubuntu-latest
    needs: [ backend-build, frontend-build ]
    if: secrets.SONAR_TOKEN != ''
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '17'
          cache: maven

      - name: Cache .m2
        uses: actions/cache@v4
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-m2-

      - name: Run SonarCloud scanner (Maven)
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        working-directory: qa/backend
        run: |
          chmod +x ./mvnw.cmd || true
          ./mvnw.cmd -B org.sonarsource.scanner.maven:sonar-maven-plugin:sonar \
            -Dsonar.projectKey=${{ secrets.SONAR_PROJECT_KEY }} \
            -Dsonar.organization=${{ secrets.SONAR_ORGANIZATION }} \
            -Dsonar.host.url=${{ secrets.SONAR_HOST_URL }}

# Notes:
# - This workflow runs backend tests and frontend build on pushes and PRs to `main`.
# - The SonarCloud job runs only if you set the `SONAR_TOKEN` secret in the repository.
# - Required repository secrets for SonarCloud job: SONAR_TOKEN, SONAR_PROJECT_KEY, SONAR_ORGANIZATION, SONAR_HOST_URL
# - If you prefer a file named `sonarcloud.yml`, I can add that instead; this `ci.yml` is a general-purpose replacement.